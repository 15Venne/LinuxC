_HiStOrY_V2_
show tables;
exit
show databases
;
use march
use march;
show tables
;
select * from table1;
drop table table1;
show tables;
show databases;
use mydb2;
show tables;
drop database mydb2;
show databases;
create database test1;
show databases;
use test1;
use test;
use test1;
show tables;
show create database test;
create database test2 CHARACTER SET utf8;
show create database test2;
drop database test2;
Alter database test1 set character utf8;
Alter database test1 character set utf8;
show tables;
show test;
use test;
show tables;
alter table Person add job varchar(60);
show create table Person;
slect * from Person;
select * from Person;
insert into table value(null);
show create table Person;
insert into Person(ID, FirstName, LastName) value (3, 'li','lei');
select * from Person;
insert into Person(ID, FirstName, LastName) value (4, 'han','meimei'),;
insert into Person(ID, FirstName, LastName) value (4, 'han','meimei'),
(5, 'xiao','ming');
insert into Person(ID, FirstName, LastName) value (4, 'han','meimei'), (5, 'xiao','ming');
select * from Person;
insert into Person(ID, FirstName, LastName,petName) value (6, 'han','meimei',null);
select * from Person;
delete from Person where ID=5,ID=6,ID=4;
delete from Person where ID=5,where ID=6,where ID=4;
delete from Person where ID=5 or ID=6 or ID=4;
select * from Person;
delete from Person where ID=5,1;
delete from Person where ID=1,3;
insert into Person(ID, FirstName, LastName) values (2, 'han','meimei');
select * from Person;
insert into Person(ID, FirstName, LastName) values (4, 'han','xiaomei'),(5,'xiao','ming');
select * from Person;
insert into Person values (6, 'xiao', 'qiang', 'huahua',null);
select * from Person;
insert into Person values (6, 'xiao', 'qiang', 'huahua');
insert into Person values (7, 'xiao', 'qiang', 'huahua');
alter table Person drop petName,dropjob;
alter table Person drop petName,drop job;
alter table Person add math float;
show create table Person;
select * from Person;
insert into Person values(7, 'xiao', 'ming', 78);
insert into Person (ID, LastName) values (8, 'ming');
select * from Person;
insert into Person (ID, LastName) values (18, 'ming'),(9, 'lei');
select * from Person;
update Person set math=80;
select * from Person;
update Person set math=85 where ID=8;
update Person set math=85 where FirstName='li';
select * from Person;
delete from Person where ID=18;
select * from Person;
select * from table where ID=5;
select * from Person where ID=5;
select ID,FirstName from Person;
select ID,distict FirstName from Person;
select distict FirstName,ID from Person;
select distinct FirstName,ID from Person;
select distinct FirstName from Person;
select * distinct FirstName from Person;
exit
use test;
show tables;
show create table Person;
insert into Person value(1, 'xiao', 'ming', 85);
select * from Person;
delete from Person where FirstName='xiao';
select * from Person;
delete from Person;
select * from Person;
insert into Person values (1, 'xiao','ming',80);
select * from Person;
insert into Person values (2, 'xiao',null,80);
select * from Person;
insert into Person (ID, math) values (3, 85);
select * from Person;
insert into Person (ID, math) values (4, 85),(5,78),(6,90);
select * from Person;
update Person set FirstName='xiao', LastName='qiang' where ID=3;
update Person set FirstName='xiao', LastName='qiang' where math=85;
select * from Person;
select FistName,LastName from Person;
select FirstName,LastName from Person;
select DISTINCT FirstName from Person;
select FirstName as Name from Person;
select * from Person;
select * from Person math>80;
select * from Person where math>80;
select * from Person where math>85 or math<85;
select * from Person where math between 80 and 90;;
select * from Person where math in (90,78);
select * from Person where FirstName like '_i%';
slect * from Person;
select * from Person;
insert into Person values (7,'NULL','dong',90);
select * from Person;
select * from Person where FirstName='NULL';
select * from Person where FirstName is NULL;
select * from Person;
delete from Person where ID=3;
select * from Person;
delete from Person where FirstName='xiao';
select * from Person;
insert into Person values (8,'xiao', 'ming', 85),(1,'xiao','dong',88);
select * from Person;
select * from Person order by math;
select * from Person order by math desc;
select * from Person order by math desc limit 2;
select * from Person order by math desc limit 3;
select * from Person order by math desc limit (2,3);
select * from Person order by math desc limit (0,3);
select * from Person order by math desc limit 2,3;
select * from Person order by math desc limit 1,3;
exit
use test;
exit
show tables;
drop table stu;
drop table student;
drop table Pets;
drop table student;
ls
;
show tables;
select * from Person;
select * from Person where math between 85 and 89;
select * from Person where math between 85 and 79;
select * from Person where math in (90,60)
;
insert into Person values (6, 
'xiao','hua',60), 
(10,'xiao','ming',60);
insert into Person values (6,  'xiao','hua',60),  (10,'xiao','ming',60);
select * from Person where math in (90,60)
;
select * from Person;
select * from Person where LastName like '_o%';
select * from Person where LastName is NULL;
inset into Person (ID) values (11);
insert into Person (ID) values (11);
select * from Person;
select * from Person oerder math;
select * from Person oerder by math;
select * from Person order by math;
select * from Person order by FirstName;
select * from Person order by LastName;
select * from Person order by LastName desc;
select * from Person order by LastName asc;
select * from Person order by math limit 3;
select * from Person order by math desc limit 3;
select * from Person order by math desc limit 2,2;
select * from Person order by math desc;
create table Pets(name varchar(20) DEFAULT 'pet', ID int not null,personID int not null,
primary key(ID),foreign key(personID) references Person(ID);
create table Pets(name varchar(20) DEFAULT 'pet', ID int not null,personID int not null, primary key(ID),foreign key(personID) references Person(ID);
create table Pets(name varchar(20) DEFAULT "pet", ID int not null,personID int not null, primary key(ID),foreign key(personID) references Person(ID);
create table Pets(name varchar(20) DEFAULT pet, ID int not null,personID int not null, primary key(ID),foreign key(personID) references Person(ID);
create table Pets(name varchar(20) DEFAULT NULL, ID int not null,personID int not null, primary key(ID),foreign key(personID) references Person(ID);
create table Pets(name varchar(20) DEFAULT 'pet', ID int not null,personID int not null, primary key(ID),foreign key(personID) references Person(ID));
show create table Pets;
drop table Pets;
create table Pets(petID int not null,petName varchar(20),personID int,primary key(petID),FOREIGN KEY(personID) REFERENCES Person(ID);
create table Pets(petID int not null,petName varchar(20),personID int,primary key(petID),FOREIGN KEY(personID) REFERENCES Person(ID));
show create table Pets;
insert into Pets(petID, petName, personID) values (1, 'maomao', 36);
select * from Person;
insert into Pets(petID, petName, personID) values (1, 'maomao',11);
select * from Pets;
drop table Pets;
create table Pets(petID int not null,petName varchar(20),personID int,primary key(petID),FOREIGN KEY(personID) REFERENCES Person(ID));
drop table Person;
select * from Person;
delete from Person where ID=11;
select * from Person;
delete from Person;
show tables;
show create table empty;
alter table empty set mathscore math double(6,2) DEFAULT 60;
alter table empty set mathscore math double(6,2);
alter table empty set mathscore mathscore double(6,2);
alter table empty change mathscore math double(6,2) DEFAULT 60;
show create table empty;
show tables;
select * from Person;
show create table Person;
insert into Person values (1, 'xiao', 'ming', 78);
select * from Person;
insert into Person values (2, NULL, 'ming', 88);
select * from Person;
insert into Person (ID,math) values (3, 85);
select * from Person;
alter table Person change FirstName FirstName varchar(20) DEFAULT 'xiao';
show create table Person;
insert into Person (ID, math) values (4, 83);
select * from Person;
insert into Person values (5, 'dong','dong' 77),(6, NULL, 'qiang', 90)
;
insert into Person values (5, 'dong','dong',77),(6, NULL, 'qiang', 90)
;
select * from Person;
alter table Person add Time datetime;
select * from Person;
insert into Person (ID,Time) values (7,'2019-03-22');
select * from Person;
update Person set LastName='xiao',math=80 where ID=7;
select * from Person;
update Person set LastName='hong',Time='2019-3-21' where LastName is NULL;
select * from Person;
delete from Person where FirstName is NULL;
select * from Person;
select ID,math from Person;
insert into Person (ID, math) values (2, 77),(3,80);
select * from Person;
select DISTINCT math from Person;
select DISTINCT math,LastName from Person;
insert into Person values(8,'dong','xiao',80);
insert into Person values(8,'dong','xiao',80,NULL);
select * from Person;
select DISTINCT math,LastName from Person;
select * from Person;
select * from Person order by math;
select distinct math from Person order by math;
select distinct math from Person order by math desc;
select FirstName as Name from Person;
select * from Person;
select distinct math from Person order by FirstName desc;
select distinct FirstName from Person order by FirstName desc;
select distinct LastName from Person order by FirstName desc;
select distinct LastName from Person order by LastName desc;
select * from Person where LastName='ming;
;
'
;
select * from Person where LastName='ming;\^J;\^J\^J\^J\^J';
select * from Person where LastName='ming';
select * from Person where FirstName='xiao' and math=78;
select * from Person where LastName='xiao' and math=80;
select * from Person where LastName='xiao' or math=80;
select * from Person math >80 or math<80;
select * from Person where math >80 or math<80;
select * from Person where math Between 77 and 80;
select * from Person where math>= 77 and math<=80;
insert into Person (ID, math) values (4,60),(9,90);
insert into Person (ID, math) values (12,60),(9,90);
select * from Person;
select * from Person where math in (60,70,80,90);
select * from Person;
select * from Person where LastName LIKE '_i%';
select * from Person order by math desc limit 3;
select * from Person order by math desc limit 3,2;
select * from Person order by math desc;
select * from Person order by math desc limit 3,2;
show tables;
drop table Pets;
create table Pets(pet int not null,petName varchar(20),personID int,
create table Pets(petID int not null,petName varchar(20),personID int,
PRIMARY KEY(petID),FOREIGN KEY(personID) REFERENCE Person(ID));
create table Pets(pet int not null,petName varchar(20),personID int, create table Pets(petID int not null,petName varchar(20),personID int, PRIMARY KEY(petID),FOREIGN KEY(personID) REFERENCE Person(ID));
create table Pets(petID int not null,petName varchar(20),personID int, PRIMARY KEY(petID),FOREIGN KEY(personID) REFERENCE Person(ID));
create table Pets(petID int not null,petName varchar(20),personID int, PRIMARY KEY(petID),FOREIGN KEY(personID) REFERENCES Person(ID));
show create table Pets;
insert into Pets (1,'maomao',26);
insert into Pets values (1,'maomao',26);
select * from Person;
insert into Pets values (1, 'maomao', 3);
select * from Pets;
drop table Person;
alter table Pets drop personID;
drop table Pets;
create table Pets(petID int not null,petName varchar(20),personID int, PRIMARY KEY(petID),FOREIGN KEY(personID) REFERENCES Person(ID));
insert into Pets values (1, 'maomao', 3);
insert into Pets values (3, 'gougou', 2);
select * from Pets;
select * from Person;
create table 
lecture(PersonID int not null,lectureID int not null, PRIMARY KEY(PersonID,lectureID));
create table   lecture(PersonID int not null,lectureID int not null, PRIMARY KEY(PersonID,lectureID));
insert into lecture values(1,1),(1,2),(2,1),(2,2);
select * from lecture;
insert into lecture values(1,1);
insert into lecture values(1,null);
drop table lecture;
create table   lecture(PersonID int,lectureID int, PRIMARY KEY(PersonID,lectureID));
insert into lecture values(1,null);
insert into lecture values(1,2);
select * from lecture;
select * from Person cross join Pets;
select * from Person;
select * from Pets;
select * from Person inner join Pets;
select * from Person inner join Pets on Person.ID=Pets.personID;
select * from Person , Pets on Person.ID=Pets.personID;
select * from Person , Pets;
select * from Person right outer join Pets;
select * from Person left outer join Pets;
select * from Person left outer join Pets on Pets.personID=Person.ID;
select * from Person right outer join Pets on Pets.personID=Person.ID;
select * from Pets right outer join Person on Pets.personID=Person.ID;
select * from Person left outer join Pets on Pets.personID=Person.ID;
select * from Person left outer join Pets on Pets.personID=Person.ID where FirstName='xiao';
select * from Pets where personID=(select * from Person where FirstName='xiao');
select * from Pets where personID=(select ID from Person where FirstName='xiao');
select * from Pets where personID=(select ID from Person where LastName='hong');
select * from Pets where personID=(select ID from Person where math=77);
select * from Pets;
select * from Person;
insert into Pets values (3, 'maogou', 1);
insert into Pets values (2, 'maogou', 1);
select * from Pets where personID=(select ID from Person where LastName='ming');
select * from Person;
select * from Person where math>80 or LastName='xiao';
select * from Person where math>80 UNION select * from Person where LastName='xiao';
select * from Person group by FristName;
select * from Person group by FirstName;
select FirstName from Person group by FirstName;
select FirstName ID,math from Person group by FirstName;
select FirstName,ID,math from Person group by FirstName;
select FirstName,math from Person group by FirstName;
select math from Person group by FirstName;
select math from Person group by math;
alter table Person add age int DEFAULT 23;
select * from Person;
update Person set age=22 where ID=3;
update Person set age=24 where ID=2;
update Person set age=21 where ID=7;
update Person set age=26 where ID=1;
select age from Person where math>80 group by age;
select age from Person where math>0 group by age;
exit
show databases;
source test.sql;
show tables;
use test;
show tables;
show databases;
exit
show databases;
exit;
drop database march;
show databases;
source march.sql;
show databases;
exit
create database test1;
show databases;
exit
show databases;
drop database test1;
source test1.sql;
show databases;
exit
show databases;
create database MyDb;
use MyDb;
create table Tb1(ID int,name char(20));
insert into Tb1 values(1,'xiao');
select * from Tb1;
exit
show databases;
drop database MyDb;
exit
show databases;
create database MyDB2;
use MyDB2;
SOURCE MyDb.sql;
show tables;
show databases;
select * from Tb1;
drop table Tb1;
exit
use MyDB2;
show tables;
select * from Tb1;
use test;
exit
use test;
select * from Person;
select math,age,salary,avg(salary) from Person having FirstName='xiao' group by age;
select math,age,salary,avg(salary) from Person having FirstName='xiao' group by age,math,salary;
select math,age,salary,avg(salary) from Person having FirstName='xiao' group by age,math,salary,avg(salary);
select math,age,salary,avg(salary) from Person having FirstName='xiao';
select math,age,salary,avg(salary) from Person group by age,salary,math having avg(salary)>7000;
select * from Person;
select math,age,salary,avg(salary) from Person group by age,salary,math having avg(salary)>7000;
select math,age,salary,avg(salary) from Person; group by age,salary,math having avg(salary)>7000;
select max(salary) from Person;
select * from Person;
select age from Person group by age;
select distinct age from Person;
select count(*) from Person;
select * from Person;
select count(*) from Person;
select count(math) from Person;
select count(math) from Person group by count;
select count(math) from Person group by math;
select math,count(math) from Person group by math;
select *,count(*) from Person group by *;
select *,count(*) from Person;
select math,count(*) from Person;
select math,count(*) from Person group by math;
select * from Person;
select age,salary from Person group by age,salary;
select age from Person group by age;
select age,count(age) from Person group by age;
select age,count(math) from Person group by age;
select age,count(*) from Person group by age;
select age,count(ID) from Person group by age;
select * from Person;
select count(age),count(*) from Person;
select * from Person;
select sum(math) from Person;
select age,salary,sum(salary) from Person group by age;
select age,sum(salary) from Person group by age;
select age,sum(salary),count(*) from Person group by age;
select age,sum(salary),count(*),avg(salary) from Person group by age;
select age+math as total,avg(total) from Person group by age; 
select age+math as total,avg(age+math) from Person group by age;
select age+math as total,avg(age+math) from Person group by age+math;
select age+math as total,avg(age+math) as abg(total) from Person group by age+math;
select age+math as total,avg(age+math) as average from Person group by age+math;
select age+math as total,avg(age+math) as average from Person;
select age+math as total as average from Person;
select age+math as total from Person;
select avg(age+math) as total from Person;
select * from Person;
select age from Person group by age;
select distinct age from Person;
select age,count(age) from Person group by age;
select count(age) from Person group by age;
select age,count(math) from Person group by age;
select age,count(*) from Person group by age;
select count(*) from Person;
select age,count(*) from Person;
select * from Person;
use test;
select * from Person;
ls
;
select * from Person as P;
select * from Person as P where P.ID = 1;;
select * from Person as P where P.ID=1;;
select * from Person as P where ID=1;;
select * from Person as P where ID=1;
show databases;
create database test1;
show databases;
use test1;
show tables
;
drop database test1;
create database test1;
show create database test;
alter database test1 CHARACTER SET utf8;
show create database test;
show create database test1;
use test1;
create table Person(ID int NOT NULL AUTO_INCREMENT,FirstName varchar(20) DEFAULT 'xiao',LastName varchar(20));
create table Person(ID int NOT NULL AUTO_INCREMENT,FirstName varchar(20) DEFAULT 'xiao',LastName varchar(20),PRIMARY KEY(ID));
selct * from Person;
select * from Person;
show create table Person;
alter table Person add math float(6,2),add DateTIme time;
show create table Person;
alter table Person change FirstName FirstName varchar(25);
show create table Person;
insert into Person (ID, FirstName, math, DataTime) values (1, 'xiao', 78.567, '2019-3-26');
insert into Person (ID, FirstName, math, DateTime) values (1, 'xiao', 78.567, '2019-3-26');
insert into Person (ID, FirstName, math, DateTIme) values (1, 'xiao', 78.567, '2019-3-26');
alter table Person drop DateTIme;
show databases;
use test1;
show create table Person;
insert into Person (ID, FirstName, math,) values (1, 'xiao, 78.678);
'
;
insert into Person (ID, FirstName, math,) values (1, 'xiao, 78.678);\^J';
insert into Person (ID, FirstName, math,) values (1, 'xiao', 78.678);\^J';
;
insert into Person (ID, FirstName, math,) values (1, 'xiao', 78.678);
insert into Person (ID, FirstName, math) values (1, 'xiao', 78.678);
select * from Person;
insert into Person (FirstName, math) values ('xiao', 1278.678);
select * from Person;
insert into Person (FirstName, math) values ('xiao', 12378.678);
select * from Person;
alter table Person add Entry_time datetime;
show create table Person;
select * from Person;
update Person set Entry_time='2019-3-26';
select * from Person;
alter table Person add TTime timestamp;
select * from Person;
update Person set Entry_time='2019-3-26' where ID=1;
select * from Person;
update Person set Entry_time='2019-3-25' where ID=1;
select * from Person;
alter table Person drop Entry_time,drop TTime;
insert into Person values (3,'xiao','ming',88),(4,'xiao','peng',89);
select * from Person;
insert into Person values (5,'xiao','ming',88),(6,'xiao',null,92);
select * from Person;
update Person set LastName='jiejie' where is NULL;
update Person set LastName='jiejie' where LastName is NULL;
select * from Person;
delete from Person where ID=2;
select LastName,math from Person;
select LastName,math from Person where math>80;
select * from Person;
insert into Person values (7, 'da', 'gege', 92),(2, 'xiao','hong, 83);
;
';
insert into Person values (7, 'da', 'gege', 92),(2, 'xiao','hong, 83);\^J;\^J;\^J\^J\^J\^J';
insert into Person values (7, 'da', 'gege', 92),(2, 'xiao','hong', 82);
select * from Person;
select Distinct LastName from Person;
select Distinct LastName as Name from Person;
select * from Person;
select math+10 from Person;
select * from Person where math<88 or math>88;
select * from Person where math between 80 and 90;
select * from Person where math in (87,88,89);
select * from Person;
select * from Person where LastName LIKE '_i%';
select * from Person order by math;
select * from Person order by math desc;
select * from Person order by math asc;
select * from Person order by math limit 3;
select * from Person order by math limit 3,3;
select * from Person order by math limit 2,3;
show create table Person;
create table Pets (petID int, petName varchar(20),Primary key(petID),personID int,FOREIGN KEY(personID) REFERENCES Person(ID));
show create table Pets;
insert into Pets values (1, 'gougou', 23);
show create table Pets;
select * from Person;
insert into Pets values (1, 'gougou', 3);
delete from Person where ID=3;
delete from Person where ID=5;
select * from Person;
insert into Pets values (2, 'gougou', 3);
select * from Pets;
create table student(ID int not null, NO int not null,primary key(ID,NO));
insert into student values (1,1),(1,2),(2,1),(2,2);
select * from Person;
select * from student;
insert into student values (1,1);
ls
;
exit
use test1;
select * from Person cross join Pets on Person.ID=Pets.personID where math >60;
select * from Person cross join Pets on Person.ID=Pets.personID where math >90;
select * from Person;
use test
show databases;
use test1
select * from Person;
alter table Person add english int, add age int, add salary int;
select * from Person;
update Person set english=80;
update Person set age=23 where ID<3;
update Person set age=22 where ID>2 and id <4;
select * from Person;
update Person set age=22 where ID>3;
select * from Person;
update Person set salary=math*100;
select * from Person;
select math+english as total from Person;
select math+english as total from Person where math+english>90;
select math+english as total from Person where math+english>160;
select * from Person cross join Pets;
select * from Person inner join Pets;
select * from Person , Pets;
select * from Person inner join Pets on Person.ID=Pets.personID;
select * from Person inner join Pets on Person.ID=Pets.personID where Pets.petID=1;
select * from Person left outer join Pets;
select * from Person right outer join Pets;
select * from Pets right outer join Person;
select * from Person left outer join Pets;
select * from Person left outer join Pets on Person.ID=Pets.personID;
select * from Person right outer join Pets on Person.ID=Pets.personID;
select * from Pets right outer join Person on Person.ID=Pets.personID;
select * from Pets as P right outer join Person as T on T.ID=P.personID;
select * from Person where math>80 UNION select * from Person where age>22; 
select * from Person where math>80 or age>22;
select age from Person group by age;
update Person set age=24 where ID>3;
select age from Person group by age;
select DISTINCt age from Person;
select * from Person;
select age,count(age) from Person group by age;
select age,count(*) from Person group by age;
select age,count(math) from Person group by age;
select age,count(math),sum(age) from Person group by age;
select age,count(math),sum(math) from Person group by age;
select age,count(math),sum(math),avg(math) from Person group by age;
select age,count(math),sum(math),avg(salary) from Person group by age;
select age,count(math),sum(math),avg(salary) from Person group by age,math;
select math,age,count(math),sum(math),avg(salary) from Person group by age,math;
select math,age,count(math),sum(math),avg(salary) from Person where FirstName='xiao' group by age,math;
select math,age,count(math),sum(math),avg(salary) from Person where FirstName='xiao' group by age,math having avg(salary)>8000;
select math,age,count(math),sum(math),avg(salary) from Person where sum(math)>85 group by age,math having avg(salary)>8000;
exit
show databases;
drop database test1;
show databases;
exit
create database test1;
use test1;
show tables;
exit
use test1;
show tables;
drop database test1;
show databases;
create schema test1;
use test1;
show tables;
source test1.sql;
use test1;
show tables;
exit
